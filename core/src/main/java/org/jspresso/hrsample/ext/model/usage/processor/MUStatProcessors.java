package org.jspresso.hrsample.ext.model.usage.processor;

import org.jspresso.framework.util.bean.integrity.EmptyPropertyProcessor;
import org.jspresso.hrsample.ext.model.usage.MUModule;
import org.jspresso.hrsample.ext.model.usage.MUStat;
import org.jspresso.hrsample.ext.model.usage.MUWorkspace;
import org.jspresso.hrsample.ext.model.usage.service.MUEvent.EMUEvent;

/**
 * Generated by Jspresso Developer Studio
 */
public class MUStatProcessors {

  /**
   * generated by Jspresso Developer Studio
   */
  public static class WorkspaceProcessor extends EmptyPropertyProcessor<MUStat, MUWorkspace> {
    
    @Override
    public void postprocessSetter(MUStat stat, MUWorkspace oldWorkpace, MUWorkspace newWorkspace) {
      if (newWorkspace !=null) {
        
        // check if current module already belongs to new selected workspace
        if (stat.getHistoryModule()!=null) {
          MUWorkspace w = stat.getWorkspaceForModule(stat.getHistoryModule().getModuleId());
          if (w==null || !w.equals(newWorkspace)) {
            // select first module
            MUModule module = null;
            if (newWorkspace.getModules() !=null) {
              for (MUModule m : newWorkspace.getAllModules()) {
                if (!MUModule.TYPE_NODE_MODULE.equals(m.getType())) {
                  module = m;
                  break;
                }
              }
            }
            stat.setHistoryModule(module);
          }
        }
      }
      else {
        MUModule m = stat.getAllModules().get(0);
        stat.setHistoryModule(m);
      }
      stat.refresh(EMUEvent.WORKSPACE);
    }

  }

  /**
   * generated by Jspresso Developer Studio
   */
  public static class PeriodProcessor extends EmptyPropertyProcessor<MUStat, String> {

    @Override
    public void postprocessSetter(MUStat stat, String oldPeriod, String newPeriod) {
      stat.refresh(EMUEvent.PERIOD);
    }
  }

  /**
   * generated by Jspresso Developer Studio
   */
  public static class HistoryModuleProcessor extends EmptyPropertyProcessor<MUStat, MUModule> {
  
    @Override
    public void postprocessSetter(MUStat stat, MUModule oldModule, MUModule newModule) {
      
      // if new selected module didn't belongs to the selected workspace... then select the new workspace !
      if (newModule!=null && stat.getWorkspace()!=null && stat.getWorkspace().getLabel()!=null) {
        MUWorkspace workspace = stat.getWorkspaceForModule(newModule.getModuleId());
        if (workspace!=null && !workspace.equals(stat.getWorkspace())) {
          stat.setWorkspace(workspace);
        }
      }
      
      stat.refresh(EMUEvent.HISTORY_MODULE);
    }
  }

}