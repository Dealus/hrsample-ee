package org.jspresso.hrsample.ext.model.usage.processor;

import org.jspresso.framework.util.bean.integrity.EmptyPropertyProcessor;
import org.jspresso.hrsample.ext.model.usage.MUModule;
import org.jspresso.hrsample.ext.model.usage.MUStat;
import org.jspresso.hrsample.ext.model.usage.MUWorkspace;
import org.jspresso.hrsample.ext.model.usage.service.MUEvent.EMUEvent;

/**
 * Generated by Jspresso Developer Studio
 */
public class MUStatProcessors {

  /**
   * generated by Jspresso Developer Studio
   */
  public static class WorkspaceProcessor extends EmptyPropertyProcessor<MUStat, MUWorkspace> {
    
    @Override
    public void postprocessSetter(MUStat stat, MUWorkspace oldWorkpace, MUWorkspace newWorkspace) {
      if (newWorkspace !=null) {
        
        // check if current module already belongs to new selected workspace
        if (stat.getHistoryModule()!=null) {
          MUWorkspace w = stat.getWorkspaceForModule(stat.getHistoryModule().getModuleId());
          if (w!=null && w.equals(newWorkspace)) {
            return; // do not replace currently selected module
          }
        }
        
        // select first module
        MUModule m = newWorkspace.getModules().size()>0 ? newWorkspace.getModules().get(0) : null;
        stat.setHistoryModule(m);
      }
      else {
        MUModule m = stat.getAllModules().get(0);
        stat.setHistoryModule(m);
      }
      stat.refresh(EMUEvent.WORKSPACE);
    }

  }

  /**
   * generated by Jspresso Developer Studio
   */
  public static class PeriodProcessor extends EmptyPropertyProcessor<MUStat, String> {

    @Override
    public void postprocessSetter(MUStat stat, String oldPeriod, String newPeriod) {
      stat.refresh(EMUEvent.PERIOD);
    }
  }

  /**
   * generated by Jspresso Developer Studio
   */
  public static class HistoryModuleProcessor extends EmptyPropertyProcessor<MUStat, MUModule> {
  
    @Override
    public void postprocessSetter(MUStat stat, MUModule oldModule, MUModule newModule) {
      if (newModule!=null) {
        MUWorkspace workspace = stat.getWorkspaceForModule(newModule.getModuleId());
        if (workspace!=null && !workspace.equals(stat.getWorkspace())) {
          stat.setWorkspace(workspace);
        }
      }
      
      stat.refresh(EMUEvent.HISTORY_MODULE);
    }
  }

}